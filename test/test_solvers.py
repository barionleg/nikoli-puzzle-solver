from solvers import solve
import unittest


class TestSolvers(unittest.TestCase):

    def test_nurikabe(self):
        pzprv3 = ('pzprv3/nurikabe/9/10/2 . . . . . . . . 2 /. . . . . . 2 . . . /. 2 . . 7 . . . . . /. . . . . . . . '
                  + '. . /. . . . . . 3 . 3 . /. . 2 . . . . 3 . . /2 . . 4 . . . . . . /. . . . . . . . . . /. 1 . . .'
                  + ' . 2 . 4 . /')
        expect = ('pzprv3/nurikabe/9/10/2 + # + + + # # + 2 /# # # + + # 2 # # # /# 2 # + 7 # + # + # /# + # # # # # # '
                  + '+ # /# # + # + + 3 # 3 # /+ # 2 # # # # 3 # # /2 # # 4 + # + + # + /# # + + # # # # # + /# 1 # # #'
                  + ' + 2 # 4 + /')
        self.assertEqual(solve(pzprv3), expect)

    def test_sudoku(self):
        pzprv3 = ('pzprv3/sudoku/9/5 3 . . 7 . . . . /6 . . 1 9 5 . . . /. 9 8 . . . . 6 . /. . . . 6 . . . 3 /4 . . 8 '
                  + '. 3 . . 1 /7 . . . 2 . . . 6 /. 6 . . . . 2 8 . /. . . 4 1 9 . . 5 /. . . . 8 . . 7 9 /. . . . . .'
                  + ' . . . /. . . . . . . . . /. . . . . . . . . /. . . . . . . . . /. . . . . . . . . /. . . . . . . '
                  + '. . /. . . . . . . . . /. . . . . . . . . /. . . . . . . . . /')
        expect = ('pzprv3/sudoku/9/5 3 . . 7 . . . . /6 . . 1 9 5 . . . /. 9 8 . . . . 6 . /. . . . 6 . . . 3 /4 . . 8 '
                  + '. 3 . . 1 /7 . . . 2 . . . 6 /. 6 . . . . 2 8 . /. . . 4 1 9 . . 5 /. . . . 8 . . 7 9 /. . 4 6 . 8'
                  + ' 9 1 2 /. 7 2 . . . 3 4 8 /1 . . 3 4 2 5 . 7 /8 5 9 7 . 1 4 2 . /. 2 6 . 5 . 7 9 . /. 1 3 9 . 4 8 '
                  + '5 . /9 . 1 5 3 7 . . 4 /2 8 7 . . . 6 3 . /3 4 5 2 . 6 1 . . /')
        self.assertEqual(solve(pzprv3), expect)


if __name__ == '__main__':
    unittest.main()
